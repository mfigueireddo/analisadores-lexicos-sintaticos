
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'divisao mais menos multiplicacao numero\n    EXPRESSAO : numero OPERACAO numero\n    \n    OPERACAO : mais\n             | menos\n             | multiplicacao\n             | divisao\n    '
    
_lr_action_items = {'numero':([0,3,4,5,6,7,],[2,8,-2,-3,-4,-5,]),'$end':([1,8,],[0,-1,]),'mais':([2,],[4,]),'menos':([2,],[5,]),'multiplicacao':([2,],[6,]),'divisao':([2,],[7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'EXPRESSAO':([0,],[1,]),'OPERACAO':([2,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> EXPRESSAO","S'",1,None,None,None),
  ('EXPRESSAO -> numero OPERACAO numero','EXPRESSAO',3,'p_EXPRESSAO','parser.py',8),
  ('OPERACAO -> mais','OPERACAO',1,'p_OPERACAO','parser.py',25),
  ('OPERACAO -> menos','OPERACAO',1,'p_OPERACAO','parser.py',26),
  ('OPERACAO -> multiplicacao','OPERACAO',1,'p_OPERACAO','parser.py',27),
  ('OPERACAO -> divisao','OPERACAO',1,'p_OPERACAO','parser.py',28),
]
